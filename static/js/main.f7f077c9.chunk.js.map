{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","handle3","state","handle2","handle1","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAACC,GAEjB,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,iBAAf,UACA,qBAAKC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKP,EAAMK,QAAQG,OACnB,4BAAIR,EAAMK,QAAQI,YCJbC,EAAW,SAACV,GAErB,OADAC,QAAQC,IAAIF,GACJ,qBAAKG,UAAU,YAAf,SAEFH,EAAMW,SAASC,KAAI,SAACP,EAAQC,GAAT,OAAgB,cAAC,EAAD,CAAeD,QAASA,GAAbC,SCN3CO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACI,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCoEXG,G,wDArEb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SArB1B,EA4BdC,QAAU,WACRvB,QAAQC,IAAI,cA1BZ,EAAKuB,MAAO,CACVd,SAAU,GACVU,YAAc,IAGhB,EAAKK,QAAU,EAAKC,QAAQC,KAAb,gBARH,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJhC,QAAQC,IAAI+B,GACZ,EAAKb,SAAS,CAACT,SAASsB,S,qBAS5B,WACEhC,QAAQC,IAAI,e,oBAOd,WAAW,IAAD,EACyBgC,KAAKT,MAA/Bd,EADC,EACDA,SAAUU,EADT,EACSA,YACXc,EAAmBxB,EAASyB,QAAO,SAAA/B,GAAO,OAAIA,EAAQG,KAAK6B,cAAcC,SAASjB,EAAYkB,wBAEtG,OACE,qBAAKpC,UAAU,MAAf,SAEE,yBAAQA,UAAU,aAAlB,UACC,oBAAIA,UAAU,UAAd,8BACD,cAAC,EAAD,CACAW,YAAY,iBACZC,aAAcmB,KAAKnB,eAEnB,cAAC,EAAD,CAAUJ,SAAUwB,a,GA/CRK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f7f077c9.chunk.js","sourcesContent":["import React from 'react'\nimport './card.component.css'\n\nexport const Card = (props) => {\n    console.log(props);\n    return (\n        <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />    \n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n        </div>)\n}","import React from 'react'\nimport './card-list.component.css'\nimport {Card} from '../card/card.component'\n\n\nexport const CardList = (props) => {\n    console.log(props);\n    return (<div className=\"card-list\">\n        {\n          props.monsters.map((monster,id) => <Card key={id} monster={monster} />)\n        }\n      \n        </div>)\n}\n","import React from 'react'\nimport './search-box.component.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return (\n        <div>\n            <input \n                className=\"search\"\n                type=\"search\" \n                placeholder={placeholder} \n                onChange={handleChange}/>\n        </div>)\n}\n","import React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n\n    this.state ={\n      monsters: [],\n      searchField : \"\"\n    }\n    // this.handleChange = this.handleChange.bind(this)\n    this.handle2 = this.handle1.bind(this) \n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {\n      console.log(users)\n      this.setState({monsters:users}\n        )\n      })\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField : e.target.value})\n  }\n\n  handle1() {\n    console.log('1 clicked')\n  }\n  \n  handle3 = () => {\n    console.log('3 clicked')\n  }\n\n  render () {\n    const {monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n       <h1 className=\"rolodex\">Mohsters Rolodex</h1> \n      <SearchBox\n      placeholder='search monster'\n      handleChange={this.handleChange}\n      />  \n      <CardList monsters={filteredMonsters} />\n      \n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\n        \n\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload!!!!\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n      \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}